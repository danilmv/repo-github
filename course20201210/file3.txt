В этом случае получится, что из тарелки мы вычитаем количество еды, потребляемое котом, но приэтом метод eat() все также бесполезен. Желательно сделать так, чтобы мы могли указывать коту, изкакой тарелки он должен покушать, и при этом сам кот должен уменьшить количество еды в тарелке.Чтобы удобно было уменьшать количество еды в тарелке без использования геттеров и сеттеров,добавим в класс Тарелка метод decreaseFood(int n), который уменьшает food на указанную величинуn. Чтобы кот мог взаимодействовать с тарелкой, в метод eat передадим в качестве параметра ссылкуна объект класса Тарелка. Ниже приведён код, учитывающий описанные выше моменты. (Кодцеликом перенесен на следующую страницу, чтобы его удобно было просматривать.) .
В примере выше представлена лишь часть возможных вариантов. Самым простым способомявляется создание строки по аналогии с s1. Обычно строки требуется создавать с начальнымизначениями. Для этого предоставлены разнообразные конструкторы. При использовании варианта s2в памяти создается новый экземпляр строки с начальным значением “Home”. Если в программе естьмассив символьных строк, то из них можно собрать строку с помощью конструктора, которому вкачестве аргумента передается ссылка на массив char[]. Если нужно создать объект типа String,содержащий ту же последовательность символов, что и другой объект типа String, можноиспользовать вариант s4. Варианты s5 и s6 позволяют «построить» строку из байтового массива безуказания кодировки или с ней. Если кодировка не указана, будет использована ASCII.
